
# NIOS compile variables
# --------------------- 

name=Altera NIOS Boards
compiler.path=C:\altera\13.1\nios2eds\bin\gnu\H-i686-mingw32\bin\
#{runtime.ide.path}/hardware/tools/g++_nios_elf/H-i686-mingw32/bin/
compiler.c.cmd=nios2-elf-gcc
compiler.c.flags=-c -g -Os -w -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500 -Dprintf=iprintf
compiler.c.elf.cmd=nios2-elf-g++
compiler.c.elf.flags=-Os -Wl,--gc-sections
compiler.S.flags=-c -g -assembler-with-cpp
compiler.cpp.cmd=nios2-elf-g++
compiler.cpp.flags=-c -g -Os -w -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500 -fno-rtti -fno-exceptions -Dprintf=iprintf
compiler.ar.cmd=nios2-elf-ar
compiler.ar.flags=rcs
compiler.objcopy.cmd=nios2-elf-objcopy
compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0
compiler.elf2hex.flags=-O binary
compiler.elf2hex.cmd=nios2-elf-objcopy
compiler.ldflags=
compiler.size.cmd=nios2-elf-size
compiler.define=-DARDUINO=
# this can be overriden in boards.txt
build.extra_flags=


compiler.nios2.c.flags="-I{build.system.path}/nios2" 

# SAM3 compile patterns
# ---------------------

## Compile c files
recipe.c.o.pattern="{compiler.path}{compiler.c.cmd}" {compiler.c.flags} -DF_CPU={build.f_cpu} -D{software}={runtime.ide.version} {build.extra_flags} {compiler.nios2.c.flags} {includes} "{source_file}" -o "{object_file}"

## Compile c++ files
recipe.cpp.o.pattern="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} -DF_CPU={build.f_cpu} -D{software}={runtime.ide.version} {build.extra_flags} {compiler.nios2.c.flags} {includes} "{source_file}" -o "{object_file}"

## Create archives
recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}" {compiler.ar.flags} "{build.path}/{archive_file}" "{object_file}"

## Combine gc-sections, archives, and objects
recipe.c.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" {compiler.c.elf.flags} "-T{build.variant.path}/linker.x" "-Wl,-Map,{build.path}/{build.project_name}.map" -o "{build.path}/{build.project_name}.elf" "-L{build.path}" -lm -lgcc -Wl,--cref -Wl,--check-sections -Wl,--gc-sections -Wl,--entry=Reset_Handler -Wl,--unresolved-symbols=report-all -Wl,--warn-common -Wl,--warn-section-align -Wl,--warn-unresolved-symbols -Wl,--start-group "{build.path}/syscalls_sam3.c.o" {object_files}  "{build.path}/{archive_file}" -Wl,--end-group

## Create eeprom
recipe.objcopy.eep.pattern=

## Create hex
recipe.objcopy.hex.pattern=
#"{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"

## Compute size
recipe.size.pattern="{compiler.path}{compiler.size.cmd}" -A "{build.path}/{build.project_name}.elf"
recipe.size.regex=\.text\s+([0-9]+).*

# Altera Uploader tools
# -------------------

tools.alterajtagtool.cmd=nios2-download
tools.alterajtagtool.cmd.windows=nios2-download
tools.alterajtagtool.path=/altera/13.1/nios2eds/

tools.alterajtagtool.upload.params.verbose=""
tools.alterajtagtool.upload.params.quiet=""
tools.alterajtagtool.upload.pattern="{path}/Nios II Command Shell.bat" {cmd} {upload.verbose} -g ` /bin/cygpath -u "{build.path}/{build.project_name}.elf" `
tools.alterajtagtool.program.params.verbose=
tools.alterajtagtool.program.params.quiet=
tools.alterajtagtool.program.pattern="{path}/Nios II Command Shell.bat" ` /bin/cygpath -u "{build.path}/{build.project_name}.elf" `
#"{path}/Nios II Command Shell.bat" {cmd} {upload.verbose} -g `/bin/cygpath -u "{build.path}`"/{build.project_name}.elf"`
